
 --2ND QUERY
 --LIST ALL EMP,PROJECTS DETAILS WHERE EMPID MATCHES WITH PID

SELECT  EMP.EID,EMPS.ENAME ,PROJECTS.PID,PROJECTS.PNAME FROM EMP INNER JOIN PROJECTS ON EMP.EID=PROJECTS.PID

-- 3RD QUERY
--TO GET TOTAL SUM OF SALARIES BASED ON DEPTNO WISE

SELECT DNO,SUM(SALARY) AS SALARY FROM  EMP  GROUP BY DNO

--4TH QUERY
-- WHICH DEPT DOES NOT EXISTS ANY EMP THOSE DETAILS?

SELECT DNAME FROM DEPT WHERE DNO NOT IN(SELECT DNO FROM EMP)

--5TH QUERY
--LIST 5TH MINIMUM SALARY EMP DETAILS USING NTH QUERY METHOD

SELECT *FROM EMP E WHERE 4=(SELECT COUNT(DISTINCT SALARY) FROM EMP WHERE SALARY<E.SALARY)


-- 8TH QUERY
-- LIST EMP MONTHLYSALARY,ANNUAL SALARY AND SAVE AS VIEW
--CREATING A VIEW TO SELECT EID,SALARY FROM EMPS TABLE AND  TO CALCULATE AS ANNUAL,MONTHLY SALARY

CREATE VIEW VIEW1 AS SELECT EID,SALARY AS MONTHLYSALARY,(SALARY*12) AS ANNUALSALARY FROM EMP
SELECT *FROM VIEW1 --SELECTING VIEW1


-- 9TH QUERY
--CREATE ONE NEW EMPTABLE IN THAT TO STORE INSERTED,DELETED USING TRIGGER.

CREATE TABLE EMP2(EID INT,ENAME VARCHAR(10) NOT NULL,SALARY INT CHECK (SALARY BETWEEN 10000 AND 50000),DNO INT) --APPLYING CONSTRAINTS
SELECT *FROM EMP2
CREATE TRIGGER TR4 -- TRIGGER NAMED TR4
ON EMP
FOR INSERT
AS
BEGIN
INSERT INTO EMP2 SELECT EID,ENAME,SALARY,DNO FROM INSERTED  
END
INSERT INTO EMP(EID,ENAME,SALARY,DNO) VALUES(133,'ABHIMANYU',30000,10) --INSERTING VALUES INTO NAMED 4 COLOUMNS
INSERT INTO EMP(EID,ENAME,SALARY,DNO) VALUES(134,'ABHIJIT',25000,10) -- INSERTING VALUES INTO NAMED 4 COLOUMNS
SELECT *FROM EMP

CREATE TABLE EMP3(EID INT,ENAME VARCHAR(10) NOT NULL,SALARY INT CHECK(SALARY BETWEEN 10000 AND 50000),DNO INT)
SELECT *FROM EMP3
CREATE TRIGGER TR5  -- TRIGGER NAMED TR5
ON EMP
FOR DELETE
AS
BEGIN
INSERT INTO EMP3 SELECT EID,ENAME,SALARY,DNO FROM DELETED
END
DELETE FROM EMP WHERE EID=134  -- DELETES  EID RECORD
SELECT *FROM EMP   -- RETRIEVE EMPS DETAILS


--10TH QUERY
--TO MAKE TAX()FUNCTION FOR GIVEN SALARY WITH 13%

CREATE FUNCTION TAX(@SALARY INT)
RETURNS FLOAT  -- RETURNS FLOAT DATAYPE
BEGIN
SET @SALARY=@SALARY+(@SALARY*0.13) -- TO CALCULATE SALARY WITH 13%
RETURN @SALARY
END 
SELECT dbo.TAX(SALARY) FROM EMP    -- dbo is DATABASE OWNER WITH EXTENSION OF TAX FUNCTION