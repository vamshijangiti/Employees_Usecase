
create Database Employee

use Employee

---creating the department table
create table dept(dno int primary key,dname varchar(10) not null,Location varchar(20) check(location in('IND','USA','US')))

INSERT INTO dept VALUES(10,'ADMIN','IND')
INSERT INTO dept VALUES(20,'STAFF','US')
INSERT INTO dept VALUES(30,'HR','IND')
INSERT INTO dept VALUES(40,'ADMIN','USA')
INSERT INTO dept VALUES(50,'HR','US')
INSERT INTO dept VALUES(70,'Clerk','USA')


select * from dept

---creating the emp table

create Table emp(eid int unique not null,ename varchar(10) not null,salary int check(salary>=10000 and salary<=50000),dno int foreign key references dept(dno))

insert into emp values(1,'vamshi',50000,10)
insert into emp values(2,'Sriram',30000,20),(3,'Navya',45000,30),(4,'Akhila',45000,40),(5,'Amulya',35000,50)
insert into emp values(6,'Manasa',30000,60)

select * from emp


--creating the Projects Table

CREATE TABLE PROJECTS(PID INT PRIMARY KEY,PNAME VARCHAR(10) NOT NULL)
INSERT INTO PROJECTS VALUES(100,'.NET')
insert into PROJECTS values (101,'c#'),(102,'JAVA')
insert into PROJECTS values (104,'HTML')
insert into PROJECTS values (103,'ADO.net')


select * from PROJECTS

--creating the EmpProjects tables

create table empProjects (EID int foreign key references emp(eid),PID int Foreign key references projects(pid))

insert into empProjects values(1,100)
insert into empProjects values (2,101),(8,102)
insert into empProjects values (3,104)

select * from empProjects


---1st query--
selecT * from emp e where dno  in (select dno from dept where dno=e.dno) 

select * from dept where dno not in (select dno from EMP)

select * from emp 
select * from dept 

---2nd Query-- 

select e.ename,e.eid,e.dno,p.PID,p.PNAME from emp e, PROJECTS p where eid in (select eid from empProjects where eid=e.eid and PID=p.PID)

select * from empProjects

---3rd Query--

select dno,sum(salary) as TotalDeptSalary from emp group by dno 

---4th Query--

select dname from dept where dno not in (select dno from emp)

---5th Query--
--nth Query--
select * from emp e where 3=(select count (distinct salary) as minsalary from emp where salary<e.salary)

select salary from emp order by salary

--6th Query--
--self Join--

select distinct  e.salary,e.ename from emp e ,emp r where e.salary=r.salary and e.eid!=r.eid

select * from emp



--7th Query--

alter procedure p2 (@eid int,@ename varchar(20),@sal int,@dno int)
as 
begin
set nocount on
    DECLARE @I INT,@J INT
    SELECT @I=COUNT(*) FROM EMP WHERE eid=@eid
	select @j=count(*) from emp where dno=@dno
if(@I>0)
	print 'eid should be unique '
else if(@j=0)
	print 'deptno not exists'
else if (@ename is  null)
	print 'ename should not be null'
else if (@sal>12000)
	begin
		insert into emp values (@eid,@ename,@sal,@dno)
		print 'record inserted Successfully'
	end
else
print 'salary should be greater than 12000'
end


exec p2 10,nani,12001,30
exec p2 11,pallavi,41000,20

select name from sysobjects where xtype='p'

select * from emp



---8th Query--

Create view v1 as select salary,(salary*12) as yearlysal from emp

alter view v1 as select salary,(salary*12) as yearlysalary from emp

select * from v1

sp_help v1

select name from sysobjects where xtype='v'


--9th Query--




--10 Query--


alter function f1(@sal int)
returns float
as 
begin
declare @tax float
set @tax=@sal-(@sal*0.13)
return @tax
end

select dbo.f1(50000)

create function tax(@eno int)
returns table
as
return (select eid,ENAME,salary*12 as yearlysal,(salary-(salary*0.13)) as TAX  from EMP where eid=@eno )

select * from dbo.tax(1)


select name from sysobjects where xtype='fn'


